package exam19;

public class EscapeSequence {
	public static void main(String[] args) {
		
		System.out.print("프로그램 "); 
		System.out.println("시작.");
		//print와 println의 차이점 ↓
		//print의 메서드 특징은 입력으로 전달한 값을 모니터에 출력하고 난 다음에 그 자리에서 다음 출력을 대기한다.
		//println은 ln은 라인의 약자이다. 
		//즉, println은 전달한 값을 출력하고 난 다음에 한칸 내려와서(줄바꿈) 다음 출력을 대기하고 있게끔 동작되는 메서드이다.
		
		System.out.println("친구가 어제 \"잘 다녀왔어?\"라고 물어서...");
		//출력할 때 큰따옴표 안에 큰따옴표를_문자열로 인식하게 해서 넣고 싶은데 에러가 난다. 이유는?
		//컴퓨터는 텍스트를 인식하지 못하고 유니코드로만 인식하기 때문에 큰따옴표를 문자열의 키워드로만 인식함.
		//의도한대로 큰따옴표를 키워드로 사용하는 것이 아니라 문자열처럼 그대로 출력을 하려면
		//별도에 의미부여가 필요하다. => 큰따옴표 앞에 역슬래시(\)를 붙여주면 된다. (문자열 안에서의 기호이며 사이에는 공백이 들어가면 안됨)
		//\의 의미는 앞에 기호를 문자열로 출력해달라는 의미이다. 
		//문자열 안에서 두 기호의 조합으로 특별한 의미를 담아주어 동작되도록 하는 키워드를 말한다. => EscapeSequence
		
		
		System.out.println("친구가 어제 '잘 다녀왔어?'라고 물어서..."); //큰따옴표 안에 작은 따옴표는 그냥 문자열로 인식이 된다.
		System.out.println("친구가 어제 \t \"잘 다녀왔어?\"라고 물어서..."); // \t -> 키보드의 tab키의 역할이다.
		System.out.println("친구가 어제 \n \"잘 다녀왔어?\"라고 물어서..."); // \n -> 줄바꿈을 해준다.
		
		
		System.out.println("C:\\workspaces\\java\\src");
		// EscapeSequence 시작을 알리는 기호가 \이기 때문에 문자열안에서 \를 만나면 EscapeSequence문자를 쓰겠다는 의미라고 해석함
		// ("C:\workspaces\java\src"): 하나의 의미를 내야 하는데 역슬래시가 하나만 쓰여졌기 때문에 에러를 냄
		// 따라서 한번 더 역슬래시를 해주게 되면 역슬래시 그대로 출력하는 의미로 해석이 되어진다.
	}
}
