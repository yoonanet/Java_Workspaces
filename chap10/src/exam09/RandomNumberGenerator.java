package exam09;

import java.util.Random;

public class RandomNumberGenerator {
	public static void main(String[] args) {
		Random random = new Random(10);//규칙적이지 않은 숫자를 가지고 올 수 있다. -> 로또처럼
		//무작위의 데이터를 추출할 때. => 컴퓨터한테 그 명령을 내릴 수 있다면 인공지능이다. 
		//컴퓨터는 정해진 약속의 규칙에 따라서 이해를 한다. (즉, 컴퓨터한테는 규칙적으로만 명령을 내려줄 수 있다.)
		//그렇다면 실제로 랜덤이라는 것에서 불규칙적인 값은 어떻게 가져온다는 것일까?
		//Random random = new Random(10); => 10을 넣어주면 강사님이랑 똑같은 결과가 나옴.
		//즉, 규칙을 빠르게 수행하게끔 처리가 되는 것이다. 생각하여 처리할 수는 없는 것이다.
		//기준값(seed)을 가지고 내부안에서 메서드를 호출해주면 0과 44사이에서 복잡하게 계산하여(계산하는 식은 nextInt()에 있음) 뽑아낸다.
		//그 알고리즘은 nextInt안에 구현이 되어있다. 결국은 랜덤이라고 했어도 규칙적인 값을 계속적으로 뽑아내는 것이다.
		
		random.setSeed(System.currentTimeMillis()); //알고리즘 설계임.
		//내부에서 값을 안넣어주면 이 값을 기준값(seed)으로 잡아주는데 이 메서드를 실행해주는 시점에 시간을 땡겨온다.
		//시간의 0.0001까지의 시간도 다 가지고 옴. 1000분의 1초까지의 값을 땡겨오므로 기준값이 다를 수 밖에 없다.
		//시간은 계속적으로 흘러가기 때문에 그 값이 중복될 일이 없다.
		//시간을 거꾸로 되돌리면 중복될 수도 있지만 희박하다.(컴퓨터로는 로또는 조작할 경우가 있어서 이렇게 구하는 것은 불가능 -> 따라서 아날로그로 해야함.)
		
		
		
		for(int i=0; i < 6; i++) { //10번 반복
			//System.out.println(random.nextInt(100)); //0~99까지의 범위에서 규칙적이지 않은 숫자를 뽑아오는 동작.
			System.out.println(random.nextInt(45)+1); //1~45까지의 범위에서 랜덤하게 출력 
		} //랜덤한 정수값을 출력_nextInt / 랜덤한 실수값을 출력_nextDouble
	}
}
